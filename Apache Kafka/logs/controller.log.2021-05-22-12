[2021-05-22 11:45:29,203] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2021-05-22 11:45:31,878] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-05-22 11:45:31,897] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2021-05-22 11:45:31,904] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2021-05-22 11:45:31,975] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2021-05-22 11:45:31,994] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-05-22 11:45:31,998] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-05-22 11:45:32,003] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2021-05-22 11:45:32,021] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 24) (kafka.controller.KafkaController)
[2021-05-22 11:45:32,027] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-05-22 11:45:32,034] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-05-22 11:45:32,066] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2021-05-22 11:45:32,076] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2021-05-22 11:45:32,078] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-05-22 11:45:32,079] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-05-22 11:45:32,081] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-05-22 11:45:32,084] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-05-22 11:45:32,085] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-05-22 11:45:32,086] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-05-22 11:45:32,087] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2021-05-22 11:45:32,090] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2021-05-22 11:45:32,115] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-05-22 11:45:32,117] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-05-22 11:45:32,122] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-05-22 11:45:32,123] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2021-05-22 11:45:32,124] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-05-22 11:45:32,125] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-05-22 11:45:32,132] INFO [RequestSendThread controllerId=0] Controller 0 connected to 192.168.99.1:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-05-22 11:45:32,136] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2021-05-22 11:45:32,138] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2021-05-22 11:45:32,152] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-05-22 11:45:32,153] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-05-22 11:45:32,154] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-05-22 11:45:32,155] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-05-22 11:45:32,157] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-05-22 11:45:32,189] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-05-22 11:45:37,203] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-05-22 11:45:37,204] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-05-22 11:45:50,786] INFO [Controller id=0] New topics: [Set(NewsRequests)], deleted topics: [HashSet()], new partition replica assignment [Map(NewsRequests-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-05-22 11:45:50,787] INFO [Controller id=0] New partition creation callback for NewsRequests-0 (kafka.controller.KafkaController)
[2021-05-22 11:45:50,844] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-05-22 11:45:50,844] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2021-05-22 11:47:43,281] INFO [Controller id=0] New topics: [Set(b9ecfa2cfe31e04dcbec33613be843d36055d8c4)], deleted topics: [HashSet()], new partition replica assignment [Map(b9ecfa2cfe31e04dcbec33613be843d36055d8c4-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-05-22 11:47:43,281] INFO [Controller id=0] New partition creation callback for b9ecfa2cfe31e04dcbec33613be843d36055d8c4-0 (kafka.controller.KafkaController)
[2021-05-22 11:50:37,209] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-05-22 11:50:37,209] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-05-22 11:50:37,212] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-05-22 11:50:37,213] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-05-22 11:50:45,144] INFO [Controller id=0] New topics: [Set(a77b1cb9d8c1f058b795d8a8e80eda67c37b8467)], deleted topics: [HashSet()], new partition replica assignment [Map(a77b1cb9d8c1f058b795d8a8e80eda67c37b8467-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-05-22 11:50:45,144] INFO [Controller id=0] New partition creation callback for a77b1cb9d8c1f058b795d8a8e80eda67c37b8467-0 (kafka.controller.KafkaController)
[2021-05-22 11:52:00,279] INFO [Controller id=0] New topics: [HashSet(3f95f1428c22d8140826ad5ed2083de98621a42d)], deleted topics: [HashSet()], new partition replica assignment [Map(3f95f1428c22d8140826ad5ed2083de98621a42d-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-05-22 11:52:00,279] INFO [Controller id=0] New partition creation callback for 3f95f1428c22d8140826ad5ed2083de98621a42d-0 (kafka.controller.KafkaController)
[2021-05-22 11:54:04,845] INFO [Controller id=0] New topics: [HashSet(09234009f6ffa28d2a2ddd2068de9906aa3e4d90)], deleted topics: [HashSet()], new partition replica assignment [Map(09234009f6ffa28d2a2ddd2068de9906aa3e4d90-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-05-22 11:54:04,845] INFO [Controller id=0] New partition creation callback for 09234009f6ffa28d2a2ddd2068de9906aa3e4d90-0 (kafka.controller.KafkaController)
[2021-05-22 11:55:37,228] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-05-22 11:55:37,228] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-05-22 11:55:37,229] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-05-22 11:55:37,229] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-05-22 11:58:01,733] INFO [Controller id=0] New topics: [HashSet(38da834280abc4ccbf29b8161a951a4e671fa9ea)], deleted topics: [HashSet()], new partition replica assignment [Map(38da834280abc4ccbf29b8161a951a4e671fa9ea-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-05-22 11:58:01,733] INFO [Controller id=0] New partition creation callback for 38da834280abc4ccbf29b8161a951a4e671fa9ea-0 (kafka.controller.KafkaController)
[2021-05-22 11:59:57,616] INFO [Controller id=0] New topics: [HashSet(03cb6f0e35b74b64034f70f6fdcd4575b94b3ea8)], deleted topics: [HashSet()], new partition replica assignment [Map(03cb6f0e35b74b64034f70f6fdcd4575b94b3ea8-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-05-22 11:59:57,616] INFO [Controller id=0] New partition creation callback for 03cb6f0e35b74b64034f70f6fdcd4575b94b3ea8-0 (kafka.controller.KafkaController)
[2021-05-22 12:00:37,235] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-05-22 12:00:37,237] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-05-22 12:00:37,238] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-05-22 12:00:37,238] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-05-22 12:00:46,841] INFO [Controller id=0] New topics: [HashSet(b4f1d335d40ab117c0233c8d2b198c4e26a34b97)], deleted topics: [HashSet()], new partition replica assignment [Map(b4f1d335d40ab117c0233c8d2b198c4e26a34b97-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-05-22 12:00:46,842] INFO [Controller id=0] New partition creation callback for b4f1d335d40ab117c0233c8d2b198c4e26a34b97-0 (kafka.controller.KafkaController)
[2021-05-22 12:02:52,480] INFO [Controller id=0] New topics: [HashSet(b9f74098c7f718cc9683609afcd386ca2838e63a)], deleted topics: [HashSet()], new partition replica assignment [Map(b9f74098c7f718cc9683609afcd386ca2838e63a-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-05-22 12:02:52,480] INFO [Controller id=0] New partition creation callback for b9f74098c7f718cc9683609afcd386ca2838e63a-0 (kafka.controller.KafkaController)
[2021-05-22 12:05:37,242] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-05-22 12:05:37,242] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-05-22 12:05:37,243] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-05-22 12:05:37,243] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-05-22 12:10:37,256] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-05-22 12:10:37,256] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-05-22 12:10:37,257] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-05-22 12:10:37,257] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-05-22 12:15:37,259] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-05-22 12:15:37,259] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-05-22 12:15:37,259] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-05-22 12:15:37,260] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-05-22 12:20:37,271] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-05-22 12:20:37,271] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-05-22 12:20:37,272] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-05-22 12:20:37,272] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
